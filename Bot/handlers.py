from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from Bot.bot import dp, db
from aiogram import types
import json


@dp.message_handler(commands=['start'])
async def start(message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç {0.full_name}'.format(message.from_user) + ', —è –±—É–¥—É —É–≤–µ–¥–æ–º–ª—è—Ç—å –≤–∞—Å –æ –Ω–æ–≤—ã—Ö —Å–µ—Ä–∏—è—Ö '
                                                                            '–∞–Ω–∏–º–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, '
                                                                            '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å /subscribe')


@dp.message_handler(commands=['subscribe'])
async def subscribe(message: types.Message):
    data = json.load(open('chapters.json'))
    episode = data[0]
    if not db.subscriber_exists(message.from_user.id):
        await db.sql_add_user(message.from_user.id, True)
        await message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å‚ò∫')
        await dp.bot.send_message(f"–í—ã—à–ª–∞ {episode['title'][18:22]} "
                                  f"—Å–µ—Ä–∏—è –∞–Ω–∏–º–µ {episode['title'][0:18]} "
                                  f"—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∂–Ω–æ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ\n"
                                  f"{episode['link']}",
                                  reply_markup=InlineKeyboardMarkup(
                                      inline_keyboard=[
                                          [
                                              InlineKeyboardButton(text="—Å–º–æ—Ç—Ä–µ—Ç—å", url=episode['link'],
                                                                   callback_data="watch")
                                          ]
                                      ]
                                  )
                                  )
    else:
        await message.answer('–í—ã –∏ —Ç–∞–∫ –ø–æ–¥–ø–∏—Å–∞–Ω—ãü§®')


@dp.message_handler(commands=['unsubscribe'])
async def unsubscribe(message: types.Message):
    if not db.subscriber_exists(message.from_user.id):
        await message.answer('–í—ã –∏ —Ç–∞–∫ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ãüòí')
    else:
        await db.sql_update_status(message.from_user.id, False)
        await message.answer('–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å‚òπ')
